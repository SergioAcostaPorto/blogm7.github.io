<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Diario de bitácora, by Sergio.</title>
    <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/</link>
    <description>Recent content in Posts on Diario de bitácora, by Sergio.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Mar 2021 14:47:11 +0100</lastBuildDate><atom:link href="https://sergioacostaporto.github.io/blogm7.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Octavo día, curl.</title>
      <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/octavod%C3%ADa/</link>
      <pubDate>Mon, 22 Mar 2021 14:47:11 +0100</pubDate>
      
      <guid>https://sergioacostaporto.github.io/blogm7.github.io/posts/octavod%C3%ADa/</guid>
      <description>Tras practicar, dejaré por aquí mi chuleta sobre los comandos curl.
 Creacion de usuarios
curl -v -k -u admin@pastcorvus.edu:Pimpollo99 -d &amp;lsquo;name=enfin&amp;amp;email=enfin@pastcorvus.edu&amp;amp;passwordPlaintext=Pimpollo99&amp;rsquo; https://10.5.2.14/admin/api/v1/boxes
Creacion de dominios
curl -v -k -u admin@pastcorvus.edu:Pimpollo99 -d &amp;lsquo;name=futurecorvus.edu&amp;rsquo; https://10.5.2.14/admin/api/v1/domains
Cambiar contraseña
curl -v -k -u admin@pastcorvus.edu:Pimpollo99 -X &amp;ldquo;PATCH&amp;rdquo; -d &amp;ldquo;passwordPlaintext=pimpollito&amp;rdquo; https://10.5.2.14/admin/api/v1/boxes/enfin@pastcorvus.edu
Borrar cuenta
curl -v -k -u admin@pastcorvus.edu:Pimpollo99 -X &amp;ldquo;DELETE&amp;rdquo; https://10.5.2.14/admin/api/v1/boxes/nombre@dominio.edu
Activar/des cuenta
curl -v -k -u admin@pastcorvus.edu:Pimpollo99 &amp;ndash;header &amp;ldquo;Content-Type: application/json&amp;rdquo; -X &amp;ldquo;PATCH&amp;rdquo; &amp;ndash;data &amp;lsquo;{&amp;ldquo;superAdmin&amp;rdquo;:true}&amp;rsquo; https://10.</description>
    </item>
    
    <item>
      <title>Séptimo día, Thunderbird.</title>
      <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/s%C3%A9ptimod%C3%ADa/</link>
      <pubDate>Mon, 15 Mar 2021 15:43:17 +0100</pubDate>
      
      <guid>https://sergioacostaporto.github.io/blogm7.github.io/posts/s%C3%A9ptimod%C3%ADa/</guid>
      <description>¡Bienvenidos a la última parte y práctica de nuestro servidor de correo!
Hoy veremos&amp;hellip; (o intentaremos ver)
***El cliente de escritorio, aka Thunderbird. ***
 El comando mágico sería: sudo apt-get install thunderbird.  Mi problema surge a la hora de configurarlo:
Al usar el comando thunderbird, recibo el error de no DISPLAY environment variable specified , tanto en la MV como en base a través de SSH. Tocando la configuración de /etc/thunderbird, tampoco he logrado ponerlo en marcha.</description>
    </item>
    
    <item>
      <title>Sexto día, batallas con homebrew y mkcert.</title>
      <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/sextod%C3%ADa/</link>
      <pubDate>Mon, 15 Mar 2021 14:58:06 +0100</pubDate>
      
      <guid>https://sergioacostaporto.github.io/blogm7.github.io/posts/sextod%C3%ADa/</guid>
      <description>A día de hoy, la batalla a contar será sobre homebrew y mkcert.
Los requisitos para certificar nuestro servidor, son: git, homebrew y kmcert.
 Instalación de Homebrew:
Necesitamos tener GIT de base.
 /bin/bash -c &amp;ldquo;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;quot;    test -d ~/.linuxbrew &amp;amp;&amp;amp; eval $(~/.linuxbrew/bin/brew shellenv)
  test -d /home/linuxbrew/.linuxbrew &amp;amp;&amp;amp; eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
  test -r ~/.bash_profile &amp;amp;&amp;amp; echo &amp;ldquo;eval $($(brew &amp;ndash;prefix)/bin/brew shellenv)&amp;rdquo; &amp;raquo;~/.bash_profile</description>
    </item>
    
    <item>
      <title>Quinto día, batallas con github y hugo.</title>
      <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/quintod%C3%ADa/</link>
      <pubDate>Tue, 09 Mar 2021 16:15:54 +0100</pubDate>
      
      <guid>https://sergioacostaporto.github.io/blogm7.github.io/posts/quintod%C3%ADa/</guid>
      <description>Las leyes del tiempo son relativas en este blog: Aunque estos días hayan sido cuando más paliza se le ha dado al github y hugo, ya hay cosas de días anteriores. Pero tengamos en cuenta que hay un proverbio que dice &amp;ldquo;El tiempo es el mejor autor: siempre encuentra un final perfecto&amp;rdquo;.
Necesitamos tres cosas:
  Hugo.
  Github
  Homebrew.
   Para instalar Hugo, necesitamos Homebrew.</description>
    </item>
    
    <item>
      <title>Cuarto día, pruebas con mi propio servidor.</title>
      <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/cuartod%C3%ADa/</link>
      <pubDate>Mon, 08 Mar 2021 20:44:57 +0100</pubDate>
      
      <guid>https://sergioacostaporto.github.io/blogm7.github.io/posts/cuartod%C3%ADa/</guid>
      <description>Desde el último día, como ya tengo mi servidor de correo montado, ahora solo faltaría configurarlo.
Para acceder a mi servidor de correo, lo haría, por primera vez, con pi_de_mv:443.
Tras haber creado mi cuenta de admin, el siguiente paso, será familiarizarnos con el dashboard. En el dashboard, nos haremos muy amigos de dos opciones:    Email Accounts
  Virtual domains
  En virtual domains, crearemos nuestros dominios.</description>
    </item>
    
    <item>
      <title>Tercer día, instalación de docker y primeros pasos.</title>
      <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/tercerd%C3%ADa/</link>
      <pubDate>Fri, 05 Mar 2021 18:22:30 +0100</pubDate>
      
      <guid>https://sergioacostaporto.github.io/blogm7.github.io/posts/tercerd%C3%ADa/</guid>
      <description>Hoy, empecé por instalar docker en mi máquina virtual debian favorita, intc . Todo se ha de hacer desde sudo, o desde root.
Lo comandos que he empleado, han sido los siguientes:
sudo passwd user1 (para aquellos que no saben cambiar la pass del user1 ;) )
sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common
 Tras instalar los paquetes, instalaremos docker con los siguientes comandos:
curl -fsSL https://download.</description>
    </item>
    
    <item>
      <title>Segundo día, warm up con poste.io .</title>
      <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/segundod%C3%ADa/</link>
      <pubDate>Thu, 04 Mar 2021 18:22:21 +0100</pubDate>
      
      <guid>https://sergioacostaporto.github.io/blogm7.github.io/posts/segundod%C3%ADa/</guid>
      <description>Hoy, para recuperar tiempo perdido, me he puesto manos a la obra con las demos del servidor de correo. Nuestro mejor amigo durante esta UF será &amp;raquo;&amp;gt; poste.io .
Para acceder a la administración, lo haremos a través de demo.poste.io/admin. (https://demo.poste.io/admin/login#admin@poste.io;admin)
Para acceder al cliente, lo haremos a través de /webmail.
 La idea es simple:
-Creamos dominios desde la opción de &amp;ldquo;Virtual domains&amp;rdquo; .
-Creamos usuarios desde la opción &amp;ldquo;Email accounts&amp;rdquo; .</description>
    </item>
    
    <item>
      <title>Primer día, warm up de github.</title>
      <link>https://sergioacostaporto.github.io/blogm7.github.io/posts/primerd%C3%ADa/</link>
      <pubDate>Wed, 03 Mar 2021 16:56:55 +0100</pubDate>
      
      <guid>https://sergioacostaporto.github.io/blogm7.github.io/posts/primerd%C3%ADa/</guid>
      <description>Para empezar, y como he faltado a la última pero primera lección sobre el poste.io, empezaré con el warm up del github pages que el profesor nos ha facilitado e indicado.
El objetivo de esta práctica es el crear un github pages que muestre por pantalla un mensaje que el profesor nos ha indicado.
 Los pasos a seguir han sido los siguientes :
1.- Crear un repositorio de github.</description>
    </item>
    
  </channel>
</rss>
